[{"/Users/arthurgao/Code/virtualblue/ui/react-pyodide-template/src/index.js":"1","/Users/arthurgao/Code/virtualblue/ui/react-pyodide-template/src/App.js":"2","/Users/arthurgao/Code/virtualblue/ui/react-pyodide-template/src/reportWebVitals.js":"3"},{"size":500,"mtime":1701467252049,"results":"4","hashOfConfig":"5"},{"size":2618,"mtime":1701596423162,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1701467252049,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"u9dhxf",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/arthurgao/Code/virtualblue/ui/react-pyodide-template/src/index.js",[],["16","17"],"/Users/arthurgao/Code/virtualblue/ui/react-pyodide-template/src/App.js",["18","19","20","21","22"],"import { useEffect, useState, useRef } from 'react';\nimport script from './python/main.py';\nimport diagram from './python/test.py';\nimport './App.css';\n\nconst runScript = async (code) => {\n  if (!('pyodide' in window)) {\n      window.pyodide= await window.loadPyodide();\n    await window.pyodide.loadPackage(\"micropip\");\n    const micropip = window.pyodide.pyimport(\"micropip\");\n    await micropip.install('plotly');\n    await micropip.install('nolds');\n\n\n    await window.pyodide.loadPackage(\"pillow\");\n    await window.pyodide.loadPackage(\"pandas\");\n    await window.pyodide.loadPackage(\"matplotlib\");\n\n  }\n  return await window.pyodide.runPythonAsync(code);\n}\n\nconst App = () => {\n  const [output, setOutput] = useState(\"(loading...)\");\n  const [diagramOut, setDiagramOut] = useState(\"(loading...)\");\n  const matplotlibOutputRef = useRef(null);\n\n  useEffect(() => {\n    const run = async () => {\n      const scriptText = await (await fetch(script)).text();\n      const diagramResult =  await (await fetch(diagram)).text();\n\n      //const out = await runScript(scriptText);\n      //setOutput(out);\n\n      // Define the URL\n      const url = \"https://nicoforecasting.azurewebsites.net/api/forecast/070f528c-2f8a-4399-a599-cfb71faee319/746b5af1-ea1f-4081-b3f0-d48abd7313a1?code=hwDugEQ9K71-rA_RbADAsjMZwM_d9KeX1auHpm-odUj7AzFug_qugw==\";\n\n      // Define headers with Content-Type\n      const headers = {\n        \"Content-Type\": \"application/csv\"\n      };\n      let result;\n      // Make the GET request using fetch\n      await fetch(url, {\n        method: \"GET\",\n        headers: headers\n      })\n        .then(response => {\n          if (response.status === 200) {\n            return response.text();\n          } else {\n            throw new Error(`Request failed with status code ${response.status}`);\n          }\n        })\n        .then(content => {\n          // Handle the response content here\n          result = content\n        })\n        .catch(error => {\n          // Handle any errors that occurred during the request\n          console.error(\"Request Error:\", error);\n        });\n\n\n      //const diagramResOut = await runScript(diagramResult);\n      let draw = await runScript(scriptText);\n      const out = draw(result);\n      const imgElement = document.createElement('img');\n      //imgElement.src = `data:image/png;base64,${diagramResOut}`;\n      imgElement.src = `data:image/png;base64,${out}`;\n      matplotlibOutputRef.current.appendChild(imgElement);\n    }\n    run();\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div ref={matplotlibOutputRef}></div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/arthurgao/Code/virtualblue/ui/react-pyodide-template/src/reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":24,"column":10,"nodeType":"29","messageId":"30","endLine":24,"endColumn":16},{"ruleId":"27","severity":1,"message":"31","line":24,"column":18,"nodeType":"29","messageId":"30","endLine":24,"endColumn":27},{"ruleId":"27","severity":1,"message":"32","line":25,"column":10,"nodeType":"29","messageId":"30","endLine":25,"endColumn":20},{"ruleId":"27","severity":1,"message":"33","line":25,"column":22,"nodeType":"29","messageId":"30","endLine":25,"endColumn":35},{"ruleId":"27","severity":1,"message":"34","line":31,"column":13,"nodeType":"29","messageId":"30","endLine":31,"endColumn":26},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'output' is assigned a value but never used.","Identifier","unusedVar","'setOutput' is assigned a value but never used.","'diagramOut' is assigned a value but never used.","'setDiagramOut' is assigned a value but never used.","'diagramResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]